### JetBrains template
# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio

*.iml

# Mock snapshot database, should be removed when state snapshot management is moved to GC2
temporary-state-storage.json

# Templates should be generated on-site, no need to store it in the repository
public/js/templates.js

# Following files are restored after running "grunt ..." command
public/index.html
public/favicon.ico

# Code coverage files
.nyc_output
coverage
coverageQueue

## Build files
public/js/build
public/css/build

## Directory-based project format:
.idea/
.fleet/
# if you remove the above rule, at least ignore the following:

# User-specific stuff:
# .idea/workspace.xml
# .idea/tasks.xml
# .idea/dictionaries

# Sensitive or high-churn files:
# .idea/dataSources.ids
# .idea/dataSources.xml
# .idea/sqlDataSources.xml
# .idea/dynamic.xml
# .idea/uiDesigner.xml

# Gradle:
# .idea/gradle.xml
# .idea/libraries

# Mongo Explorer plugin:
# .idea/mongoSettings.xml

## File-based project format:
*.ipr
*.iws

## Plugin-specific files:

# IntelliJ
/out/

# mpeltonen/sbt-idea plugin
.idea_modules/

# JIRA plugin
atlassian-ide-plugin.xml

# Crashlytics plugin (for Android Studio and IntelliJ)
com_crashlytics_export_strings.xml
crashlytics.properties
crashlytics-build.properties
### Node template
# Logs
logs
*.log
npm-debug.log*

# Runtime data
pids
*.pid
*.seed

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# node-waf configuration
.lock-wscript

# Compiled binary addons (http://nodejs.org/api/addons.html)
build/Release

# Dependency directory
# https://docs.npmjs.com/misc/faq#should-i-check-my-node-modules-folder-into-git
node_modules

# Templates should be generated every time
public/js/templates.js

# Created by .ignore support plugin (hsz.mobi)

config/config.js
config/_variables.less

/public/css/build/all.min.css
/public/js/bundle.js
/public/service-worker.bundle.js
/public/js/build/all.min.js
/config/_styles.less
/config/configServer.js
/public/js/templates.js
/public/bower_components
/public/css/extensions/all.min.css
/public/css/styles.css
/public/css/styles.min.css
docs/html
# Environment variables
.env
